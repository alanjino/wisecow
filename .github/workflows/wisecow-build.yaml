name: Container Docker Image for main

on:
  push:
    paths-ignore:
      - '**.md'
    branches:
      - 'main'

jobs:

  build:

    runs-on: ubuntu-latest 
    permissions:
      packages: write
      id-token: write
      contents: read
      actions: read
      security-events: write
    env:
      REGISTRY: ghcr.io
      GH_URL: https://github.com
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
          flavor: |
            latest=true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Build image and push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          file:  ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:latest
          labels: ${{ steps.metadata.outputs.labels }}
          push: true

  deploy:
  
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check if kubeconfig is set
        if: ${{ secrets.KUBECONFIG != '' }}
        run: echo "Kubeconfig secret found"

      - name: Exit if no kubeconfig
        if: ${{ secrets.KUBECONFIG == '' }}
        run: |
          echo "No kubeconfig secret, skipping deployment"
          exit 0

      - name: Checkout repo
        uses: actions/checkout@v3
        if: ${{ secrets.KUBECONFIG != '' }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
        if: ${{ secrets.KUBECONFIG != '' }}

      - name: Restore kubeconfig
        if: ${{ secrets.KUBECONFIG != '' }}
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          kubectl version --client
